<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bioteknologi Seru</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Fredoka+One&family=Inter:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tone/14.7.77/Tone.js"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #a7f3d0 0%, #34d399 100%);
            overflow: hidden;
        }
        .game-title {
            font-family: 'Fredoka One', cursive;
            text-shadow: 3px 3px 0px rgba(0,0,0,0.1);
        }
        .card {
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            border: 2px solid white;
        }
        .btn-option {
            transition: all 0.2s ease-in-out;
        }
        .btn-option:hover {
            transform: translateY(-5px) scale(1.05);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }
        .btn-option.correct {
            background-color: #22c55e !important;
            color: white;
            animation: pulse-correct 0.5s;
        }
        .btn-option.incorrect {
            background-color: #ef4444 !important;
            color: white;
            animation: shake-incorrect 0.5s;
        }
        .hidden { display: none; }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.9); }
            to { opacity: 1; transform: scale(1); }
        }
        .fade-in { animation: fadeIn 0.5s ease-out forwards; }
        
        @keyframes idle-bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-15px); }
        }
        .character-idle { animation: idle-bounce 2s ease-in-out infinite; }
        
        @keyframes happy-jump {
            0%, 100% { transform: translateY(0) scale(1); }
            50% { transform: translateY(-30px) scale(1.1) rotate(10deg); }
        }
        .character-happy { animation: happy-jump 0.5s ease-in-out; }
        
        @keyframes sad-droop {
            0% { transform: translateY(0) rotate(0); opacity: 1; }
            50% { transform: translateY(10px) rotate(-5deg) scale(0.95); opacity: 0.7; }
            100% { transform: translateY(0) rotate(0); opacity: 1; }
        }
        .character-sad { animation: sad-droop 0.5s ease-in-out; }

        @keyframes shake-incorrect {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }
        @keyframes pulse-correct {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        @keyframes party-dance {
             0%, 100% { transform: translateY(0px) rotate(0deg); }
            25% { transform: translateY(-20px) rotate(5deg); }
            50% { transform: translateY(0px) rotate(-5deg); }
            75% { transform: translateY(-10px) rotate(0deg); }
        }
        .win-character {
            animation: party-dance 2s ease-in-out infinite;
        }
        
    </style>
</head>
<body class="flex items-center justify-center min-h-screen p-4">

    <!-- Game Container -->
    <div id="game-container" class="w-full max-w-4xl mx-auto">

        <!-- Start Screen -->
        <div id="start-screen" class="card p-8 md:p-12 text-center fade-in">
            <h1 class="game-title text-5xl md:text-7xl text-green-700">Bioteknologi Seru!</h1>
            <p class="mt-4 text-lg text-gray-600">Selamat datang di petualangan bioteknologi yang menyenangkan! Jawab 5 pertanyaan untuk menang.</p>
            <div class="mt-8">
                 <!-- Character Medley -->
                <div class="flex justify-center items-center space-x-4">
                    <div class="w-16 h-16 transform scale-75" id="start-dna"></div>
                    <div class="w-16 h-16" id="start-dolly"></div>
                    <div class="w-16 h-16 transform scale-75" id="start-tempeh"></div>
                    <div class="w-16 h-16" id="start-yoghurt"></div>
                </div>
            </div>
            <button id="start-button" class="mt-8 bg-green-500 hover:bg-green-600 text-white font-bold py-4 px-10 rounded-full text-2xl transform hover:scale-105 transition-transform shadow-lg">
                Mulai Main!
            </button>
        </div>

        <!-- Game Screen -->
        <div id="game-screen" class="hidden">
            <div class="text-center mb-4">
                <p id="stage-indicator" class="text-2xl font-bold text-white text-shadow-lg game-title tracking-wider">Stage 1 / 5</p>
            </div>
            <div class="card p-6 md:p-8 flex flex-col md:flex-row items-center gap-8">
                <div id="character-container" class="w-48 h-48 md:w-64 md:h-64 flex-shrink-0">
                    <!-- Character SVG will be injected here -->
                </div>
                <div class="w-full">
                    <p id="question-text" class="text-lg md:text-xl text-gray-800 mb-6 font-semibold h-24"></p>
                    <div id="options-container" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- Options will be injected here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Win Screen -->
        <div id="win-screen" class="hidden card p-8 md:p-12 text-center fade-in">
            <h1 class="game-title text-5xl md:text-7xl text-green-600">Kamu Hebat!</h1>
            <p class="mt-4 text-lg text-gray-600">Selamat! teman telah menyelesaikan semua stage petualangan bioteknologi</p>
            <p id="final-score" class="mt-6 text-5xl font-bold text-green-700 game-title"></p>
            <div id="win-characters" class="mt-8 flex justify-center items-end space-x-2 md:space-x-4">
                <!-- All characters dancing will be here -->
            </div>
            <button id="restart-button" class="mt-8 bg-green-500 hover:bg-green-600 text-white font-bold py-4 px-10 rounded-full text-2xl transform hover:scale-105 transition-transform shadow-lg">
                Main Lagi
            </button>
        </div>
    </div>

    <script>
        // --- DOM Elements ---
        const startScreen = document.getElementById('start-screen');
        const gameScreen = document.getElementById('game-screen');
        const winScreen = document.getElementById('win-screen');
        const startButton = document.getElementById('start-button');
        const restartButton = document.getElementById('restart-button');
        const stageIndicator = document.getElementById('stage-indicator');
        const characterContainer = document.getElementById('character-container');
        const questionText = document.getElementById('question-text');
        const optionsContainer = document.getElementById('options-container');

        // --- Sound Engine (Tone.js) ---
        let soundsReady = false;
        const synth = new Tone.Synth().toDestination();
        const backgroundMusic = new Tone.Player({
            url: "data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU3LjgyLjEwMAAAAAAAAAAAAAAA//tAwAAAAAAAAAAAAAAAAAAAAAAAABMYXZjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1Ni40MC4xMDH/+wNAbAAAAAAAAAAAAFBTVkIAAABmZmZ//sZQCAAAAAAACZodHRwOi8vZW4ubWVsb2JpZS5jb20v//sZQRAAAAAAASU5GTwAAAAwAAAAAMDAwMDAwMDAw//tA4AAAAAAAAAAAAAAAAAAAAAAAAD/+wNAcAAAAAAAAAAAAP//sZQSAAAAAAAV2Vic2l0ZSBhZGRyZXNzOiBodHRwOi8vZW4ubWVsb2JpZS5jb20v//tA5AAAAAAAAAAAAAAAAAAAAAAAAD/ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm-..-..",
            loop: true,
            volume: -12,
        }).toDestination();
        
        function playSound(type) {
            if (!soundsReady) return;
            try {
                if (type === 'correct') {
                    synth.triggerAttackRelease("C5", "8n", Tone.now());
                    synth.triggerAttackRelease("G5", "8n", Tone.now() + 0.1);
                } else if (type === 'wrong') {
                    synth.triggerAttackRelease("A3", "8n", Tone.now());
                } else if (type === 'win') {
                    synth.triggerAttackRelease("C5", "8n", Tone.now());
                    synth.triggerAttackRelease("E5", "8n", Tone.now() + 0.15);
                    synth.triggerAttackRelease("G5", "8n", Tone.now() + 0.3);
                    synth.triggerAttackRelease("C6", "4n", Tone.now() + 0.45);
                }
            } catch (error) {
                console.error("Error playing sound:", error);
            }
        }

        // --- Game Data ---
        const characters = {
            dna: `<svg viewBox="0 0 100 100" class="character-idle"><path d="M50 0 C70 20, 30 30, 50 50 S70 70, 50 100" stroke="#10b981" stroke-width="8" fill="none" stroke-linecap="round"/><path d="M50 0 C30 20, 70 30, 50 50 S30 70, 50 100" stroke="#e74c3c" stroke-width="8" fill="none" stroke-linecap="round"/><circle cx="50" cy="10" r="5" fill="#f1c40f"/><circle cx="38" cy="30" r="5" fill="#2ecc71"/><circle cx="62" cy="70" r="5" fill="#9b59b6"/><circle cx="50" cy="90" r="5" fill="#1abc9c"/></svg>`,
            dolly: `<svg viewBox="0 0 100 100" class="character-idle"><path d="M20 70 Q50 40 80 70 C90 80 90 95 80 95 H20 C10 95 10 80 20 70Z" fill="#f1f2f6"/><path d="M30 60 Q50 30 70 60 C80 65 80 80 70 80 H30 C20 80 20 65 30 60Z" fill="white"/><circle cx="35" cy="55" r="5" fill="black"/><circle cx="65" cy="55" r="5" fill="black"/><path d="M45 65 Q50 70 55 65" stroke="black" stroke-width="2" fill="none"/></svg>`,
            bacterium: `<svg viewBox="0 0 100 100" class="character-idle"><path d="M20 50 C20 20, 80 20, 80 50 S20 80, 50 80 S20 50, 20 50Z" fill="#2ecc71"/><circle cx="40" cy="50" r="6" fill="white"/><circle cx="42" cy="50" r="3" fill="black"/><circle cx="60" cy="50" r="6" fill="white"/><circle cx="62" cy="50" r="3" fill="black"/><path d="M45 65 Q50 70 55 65" stroke="white" stroke-width="3" fill="none" stroke-linecap="round"/></svg>`,
            tomato: `<svg viewBox="0 0 100 100" class="character-idle"><circle cx="50" cy="65" r="30" fill="#e74c3c"/><path d="M50 35 C40 30 60 30 50 35 L 45 15 L 55 15 Z" fill="#27ae60"/><circle cx="40" cy="60" r="5" fill="white"/><circle cx="41" cy="60" r="2" fill="black"/><circle cx="60" cy="60" r="5" fill="white"/><circle cx="61" cy="60" r="2" fill="black"/><path d="M45 75 Q50 80 55 75" stroke="white" stroke-width="2" fill="none" stroke-linecap="round"/></svg>`,
            flask: `<svg viewBox="0 0 100 100" class="character-idle"><path d="M35 10 H65 V30 L75 80 Q70 95 50 95 Q30 95 25 80 L35 30Z" fill="#ecf0f1" stroke="#bdc3c7" stroke-width="4"/><path d="M40 90 Q50 80 60 90" fill="none" stroke="#27ae60" stroke-width="4"/><circle cx="50" cy="70" r="4" fill="#27ae60"/><circle cx="45" cy="50" r="3" fill="#27ae60"/><circle cx="58" cy="60" r="2" fill="#27ae60"/><circle cx="40" cy="65" r="3" fill="#27ae60"/><circle cx="55" cy="80" r="4" fill="#27ae60"/></svg>`,
            tempeh: `<svg viewBox="0 0 100 100"><rect x="20" y="30" width="60" height="40" rx="10" fill="#f3eac2"/><circle cx="35" cy="45" r="4" fill="#d4b996"/><circle cx="60" cy="60" r="5" fill="#d4b996"/><circle cx="40" cy="55" r="2" fill="#d4b996"/><circle cx="70" cy="40" r="3" fill="#d4b996"/><circle cx="30" cy="50" r="3" fill="white"/><circle cx="31" cy="50" r="1.5" fill="black"/><circle cx="50" cy="50" r="3" fill="white"/><circle cx="51" cy="50" r="1.5" fill="black"/><path d="M35 60 Q40 65 45 60" stroke="black" stroke-width="1.5" fill="none"/></svg>`,
            yoghurt: `<svg viewBox="0 0 100 100"><path d="M20 90 H80 L75 20 H25 Z" fill="#e0f7fa"/><path d="M25 20 H75 V30 H25Z" fill="#00bcd4"/><circle cx="40" cy="55" r="5" fill="black"/><circle cx="60" cy="55" r="5" fill="black"/><path d="M45 70 Q50 80 55 70" stroke="black" stroke-width="2" fill="none"/></svg>`,
        };

        const gameData = [
            {
                question: "Sebuah perusahaan farmasi ingin memproduksi insulin dalam jumlah besar. Teknik bioteknologi modern apa yang paling efisien digunakan?",
                options: ["Kloning", "Kultur jaringan", "Rekayasa genetika", "Bioremediasi"],
                answer: 2,
                character: characters.dna
            },
            {
                question: "Petani menghadapi masalah hama ulat yang merusak tanaman jagung. Solusi bioteknologi yang paling tepat adalah...",
                options: ["Mengembangkan jagung transgenik resisten hama", "Menggunakan bakteri untuk nata de coco", "Melakukan kloning pada jagung", "Mengaplikasikan bioremediasi"],
                answer: 0,
                character: characters.dolly
            },
            {
                question: "Di suatu daerah, air sungai tercemar tumpahan minyak. Solusi bioteknologi yang tepat adalah...",
                options: ["Fitoremediasi", "Bioremediasi dengan bakteri", "Terapi gen", "Produksi biogas"],
                answer: 1,
                character: characters.bacterium
            },
            {
                question: "Tomat Flavr Savr bertujuan memperlambat pembusukan. Dampak negatif yang mungkin timbul bagi lingkungan adalah...",
                options: ["Resistensi hama terhadap pestisida", "Terganggunya keanekaragaman hayati", "Menurunnya produksi buah", "Kontroversi etika kloning"],
                answer: 1,
                character: characters.tomato
            },
            {
                question: "Apa perbedaan utama antara bioteknologi konvensional dan modern?",
                options: ["Konvensional pakai mikroorganisme, modern pakai enzim", "Konvensional sederhana, modern melibatkan manipulasi DNA", "Konvensional untuk pangan, modern untuk kesehatan", "Konvensional tanpa dampak negatif"],
                answer: 1,
                character: characters.flask
            }
        ];

        let currentStage = 0;
        let waitingForNext = false;
        let playerScore = 0;

        // --- Game Logic Functions ---
        
        function setupStartScreen() {
             document.getElementById('start-dna').innerHTML = characters.dna;
             document.getElementById('start-dolly').innerHTML = characters.dolly;
             document.getElementById('start-tempeh').innerHTML = characters.tempeh;
             document.getElementById('start-yoghurt').innerHTML = characters.yoghurt;
        }

        function startGame() {
            if (!soundsReady) {
                 Tone.start().then(() => {
                    soundsReady = true;
                    if (backgroundMusic.state !== 'started') {
                        backgroundMusic.start();
                    }
                });
            } else {
                 if(backgroundMusic.state !== 'started') {
                    backgroundMusic.start();
                 }
            }
            
            currentStage = 0;
            waitingForNext = false;
            playerScore = 0;
            startScreen.classList.add('hidden');
            winScreen.classList.add('hidden');
            gameScreen.classList.remove('hidden');
            gameScreen.classList.add('fade-in');
            loadStage(currentStage);
        }

        function loadStage(stageIndex) {
            const stageData = gameData[stageIndex];
            stageIndicator.textContent = `Stage ${stageIndex + 1} / ${gameData.length}`;
            characterContainer.innerHTML = stageData.character;
            questionText.textContent = stageData.question;
            
            optionsContainer.innerHTML = '';
            stageData.options.forEach((option, index) => {
                const button = document.createElement('button');
                button.innerHTML = `<span class="font-bold mr-2">${String.fromCharCode(65 + index)}.</span> ${option}`;
                button.className = "btn-option w-full text-left p-4 rounded-lg bg-white border-2 border-gray-200 text-gray-700 font-semibold";
                button.onclick = () => selectAnswer(index, button);
                optionsContainer.appendChild(button);
            });
            waitingForNext = false;
        }

        function selectAnswer(selectedIndex, button) {
            if (waitingForNext) return;
            
            waitingForNext = true;
            const correctIndex = gameData[currentStage].answer;
            const characterElement = characterContainer.querySelector('svg');

            if (selectedIndex === correctIndex) {
                playSound('correct');
                playerScore += 20;
                button.classList.add('correct');
                characterElement.classList.remove('character-idle');
                characterElement.classList.add('character-happy');

                setTimeout(() => {
                    currentStage++;
                    if (currentStage < gameData.length) {
                        loadStage(currentStage);
                    } else {
                        showWinScreen();
                    }
                }, 1500);

            } else {
                playSound('wrong');
                button.classList.add('incorrect');
                characterElement.classList.remove('character-idle');
                characterElement.classList.add('character-sad');

                // Highlight correct answer
                optionsContainer.children[correctIndex].classList.add('correct');

                setTimeout(() => {
                    currentStage++;
                    if (currentStage < gameData.length) {
                        loadStage(currentStage);
                    } else {
                        showWinScreen();
                    }
                }, 2000);
            }
        }

        function showWinScreen() {
            gameScreen.classList.add('hidden');
            winScreen.classList.remove('hidden');
            playSound('win');
            if (backgroundMusic.state === 'started') backgroundMusic.stop();
            
            document.getElementById('final-score').textContent = `Skor Akhir Kamu: ${playerScore}`;

            const winCharactersContainer = document.getElementById('win-characters');
            winCharactersContainer.innerHTML = '';
            const allChars = [characters.dna, characters.dolly, characters.tempeh, characters.yoghurt, characters.tomato, characters.bacterium, characters.flask];
            
            allChars.forEach((charSVG, index) => {
                const div = document.createElement('div');
                div.className = 'w-16 h-16 md:w-24 md:h-24 win-character';
                div.innerHTML = charSVG.replace('class="character-idle"','');
                div.style.animationDelay = `${index * 0.1}s`;
                winCharactersContainer.appendChild(div);
            });
        }
        
        // --- Event Listeners ---
        startButton.addEventListener('click', startGame);
        restartButton.addEventListener('click', startGame);
        
        // --- Initial Setup ---
        window.onload = setupStartScreen;

    </script>
</body>
</html>
